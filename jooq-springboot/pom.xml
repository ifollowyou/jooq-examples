<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
            http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.ifollowyou.jooq</groupId>
    <artifactId>jooq-springboot</artifactId>
    <version>1.0</version>
    <packaging>jar</packaging>

    <properties>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <mysql.version>5.1.37</mysql.version>
        <db.driver>com.mysql.jdbc.Driver</db.driver>
        <db.url>
            jdbc:mysql://localhost:3306/jeefw?autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=UTF-8
        </db.url>
        <db.schema>jeefw</db.schema>
        <db.user>jeefw</db.user>
        <db.password>jeefw</db.password>
        <db.creation.skip>false</db.creation.skip>
    </properties>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.3.0.RELEASE</version>
        <relativePath/>
    </parent>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jooq</artifactId>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>

        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-meta</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-codegen</artifactId>
        </dependency>

        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.4</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <repositories>
        <repository>
            <id>spring-libs-release</id>
            <url>https://repo.spring.io/libs-release/</url>
        </repository>
        <repository>
            <id>releases</id>
            <url>http://127.0.0.1:8081/nexus/content/groups/public/</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>spring-releases</id>
            <url>https://repo.spring.io/libs-release/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>releases</id>
            <url>http://127.0.0.1:8081/nexus/content/groups/public/</url>
        </pluginRepository>
    </pluginRepositories>

    <distributionManagement>
        <repository>
            <id>releases</id>
            <name>Nexus Release Repository</name>
            <url>http://localhost:8081/nexus/content/repositories/releases/</url>
        </repository>
    </distributionManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>1.2.5.RELEASE</version>
                </plugin>
                <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.codehaus.mojo</groupId>
                                        <artifactId>
                                            sql-maven-plugin
                                        </artifactId>
                                        <versionRange>[1.5,)</versionRange>
                                        <goals>
                                            <goal>execute</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.jooq</groupId>
                                        <artifactId>
                                            jooq-codegen-maven
                                        </artifactId>
                                        <versionRange>[3.6.2,)</versionRange>
                                        <goals>
                                            <goal>generate</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <verbose>true</verbose>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>sql-maven-plugin</artifactId>
                <version>1.5</version>
                <configuration>
                    <driver>${db.driver}</driver>
                    <url>${db.url}</url>
                    <username>${db.user}</username>
                    <password>${db.password}</password>
                    <skip>${db.creation.skip}</skip>
                    <autocommit>true</autocommit>
                    <encoding>UTF-8</encoding>
                    <orderFile>ascending</orderFile>
                    <onError>abort</onError>
                </configuration>
                <executions>
                    <execution>
                        <id>create-schema-data</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <srcFiles>
                                <srcFile>src/main/resources/sql/01-schema.sql</srcFile>
                                <srcFile>src/main/resources/sql/02-data.sql</srcFile>
                            </srcFiles>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>${mysql.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen-maven</artifactId>
                <version>3.7.1</version>
                <dependencies>
                    <!-- 数据库依赖  -->
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>${mysql.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <!-- 触发任务及目标  -->
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>

                <configuration>
                    <!-- 数据库配置 -->
                    <jdbc>
                        <driver>${db.driver}</driver>
                        <url>${db.url}</url>
                        <user>${db.user}</user>
                        <password>${db.password}</password>
                    </jdbc>
                    <generator>
                        <database>
                            <name>org.jooq.util.mysql.MySQLDatabase</name>
                            <!-- 生成代码的数据库名称 -->
                            <inputSchema>${db.schema}</inputSchema>
                            <!-- 包含的表 -->
                            <includes>.*</includes>
                            <!-- 排除的表 -->
                            <excludes></excludes>
                        </database>
                        <generate>
                            <!-- Primary key / foreign key relations should be generated and used.
                                 This is a prerequisite for various advanced features.
                                 Defaults to true -->
                            <relations>true</relations>

                            <!-- Generate deprecated code for backwards compatibility
                                 Defaults to true -->
                            <deprecated>true</deprecated>

                            <!-- Do not reuse this property. It is deprecated as of jOOQ 3.3.0 -->
                            <instanceFields>true</instanceFields>

                            <!-- Generate the javax.annotation.Generated annotation to indicate
                                 jOOQ version used for source code.
                                 Defaults to true -->
                            <generatedAnnotation>true</generatedAnnotation>

                            <!-- Generate jOOQ Record classes for type-safe querying. You can
                                 turn this off, if you don't need "active records" for CRUD
                                 Defaults to true -->
                            <records>true</records>

                            <!-- Generate POJOs in addition to Record classes for usage of the
                                 ResultQuery.fetchInto(Class) API
                                 Defaults to false -->
                            <pojos>false</pojos>

                            <!-- Generate immutable POJOs for usage of the ResultQuery.fetchInto(Class) API
                                 This overrides any value set in <pojos/>
                                 Defaults to false -->
                            <immutablePojos>false</immutablePojos>

                            <!-- Generate interfaces that will be implemented by records and/or pojos.
                                 You can also use these interfaces in Record.into(Class<?>) and similar
                                 methods, to let jOOQ return proxy objects for them.
                                 Defaults to false -->
                            <interfaces>false</interfaces>

                            <!-- Generate DAOs in addition to POJO classes
                                 Defaults to false -->
                            <daos>false</daos>

                            <!-- Annotate POJOs and Records with JPA annotations for increased
                                 compatibility and better integration with JPA/Hibernate, etc
                                 Defaults to false -->
                            <jpaAnnotations>false</jpaAnnotations>

                            <!-- Annotate POJOs and Records with JSR-303 validation annotations
                                 Defaults to false -->
                            <validationAnnotations>false</validationAnnotations>

                            <!-- Annotate DAOs with useful spring annotations such as @Repository or @Autowired
                                 Defaults to false -->
                            <springAnnotations>false</springAnnotations>

                            <!-- Allow to turn off the generation of global object references, which include
                                 - Tables.java
                                 - Sequences.java
                                 - UDTs.java
                                 Turning off the generation of the above files may be necessary for very
                                 large schemas, which exceed the amount of allowed constants in a class's
                                 constant pool (64k) or, whose static initialiser would exceed 64k of
                                 byte code
                                 Defaults to true -->
                            <globalObjectReferences>true</globalObjectReferences>

                            <!-- Generate fluent setters in
                                 - records
                                 - pojos
                                 - interfaces
                                 Fluent setters are against the JavaBeans specification, but can be quite
                                 useful to those users who do not depend on EL, JSP, JSF, etc.
                                 Defaults to false -->
                            <fluentSetters>false</fluentSetters>
                        </generate>
                        <target>
                            <packageName>com.example.jooq.db</packageName>
                            <directory>target/generated-sources/jooq/db</directory>
                        </target>
                    </generator>
                </configuration>
            </plugin>

        </plugins>
    </build>



</project>